package admin

import (
	"fmt"
	"github.com/blackflame007/nicklesseos.com/models"
)

templ Tokens(tokenList []models.Token) {
	<div class="flex flex-col p-5" x-data="{ formShown: false, modalTokenName: '', modalTokenId: null }">
		<h1 class="text-2xl self-center">Tokens</h1>
		<div class="flex flex-row my-5">
			<button
				id="toggleFormButton"
				class="btn btn-outline btn-primary"
				@click="formShown = !formShown"
			>
				Toggle Api Token Form
			</button>
		</div>
		<div id="tokenFormContainer" x-show="formShown" x-cloak>
			@TokenForm()
		</div>
		<div class="overflow-x-auto">
			<table class="table">
				<thead>
					<tr>
						<th>ID</th>
						<th>Name</th>
						<th>Created Date</th>
						<th>Expiration Dated</th>
						<th>Actions</th>
					</tr>
				</thead>
				<tbody>
					for _, token := range tokenList {
						<tr x-data={ fmt.Sprintf("{ showModal%d: false }", token.ID) }>
							<td>{ fmt.Sprintf("%d", token.ID) }</td>
							<td>{ token.Name }</td>
							<td>{ fmt.Sprintf("%s", token.CreatedAt.Format("2006-01-02")) }</td>
							if token.RevokedAt.Valid {
								<td>{ token.RevokedAt.Time.Format("2006-01-02") }</td>
							} else {
								<td>N/A</td>
							}
							<td>
								<button
									class="btn btn-danger"
									@click={ fmt.Sprintf("showModal%d = true; modalTokenName = '%s'; modalTokenId = %d", token.ID, token.Name, token.ID) }
								>
									Delete
								</button>
								@DeleteModal(token.ID, token.Name)
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
}

templ DeleteModal(id int, name string) {
	<div id="deleteModal" class="modal modal-open modal-middle" x-show={ fmt.Sprintf("showModal%d", id) } x-cloak>
		<div class="modal-box">
			<span class="close" @click={ fmt.Sprintf("showModal%d = false", id) }>&times;</span>
			<p>Are you sure you want to delete the token <span id="tokenName">{ name }</span>?</p>
			<div class="modal-action center">
				<form
					action={ templ.SafeURL("/admin/revoke_token/" + fmt.Sprintf("%d", id)) }
					method="DELETE"
					hx-delete={ "/admin/revoke_token/" + fmt.Sprintf("%d", id) }
					hx-target="closest tr"
					hx-swap="outerHTML swap:1s"
				>
					<input type="hidden" name="id" value={ fmt.Sprintf("%d", id) }/>
					<button
						class="btn btn-danger"
						id="confirmDeleteButton"
						@click={ fmt.Sprintf("showModal%d = false", id) }
						type="submit"
					>Delete</button>
				</form>
				<button class="btn btn-secondary" @click={ fmt.Sprintf("showModal%d = false", id) }>Cancel</button>
			</div>
		</div>
	</div>
}

templ TokenForm() {
	<form action="/admin/generate_token" method="POST" hx-post="/admin/generate_token" hx-target="#tokenFormContainer" hx-swap="outerHTML swap:1s">
		<div class="flex flex-col">
			<label for="name">Name</label>
			<input type="text" name="name" id="name" class="input"/>
		</div>
		<div class="flex flex-col">
			<label for="revoked_at">Expiration Date</label>
			<input type="date" name="revoked_at" id="revoked_at" class="input"/>
		</div>
		<div class="flex flex-row">
			<button type="submit" class="btn btn-primary">Create</button>
		</div>
	</form>
}
